#Tạo secret xác thực registry
kubectl create secret docker-registry shopnow-registry-secret --docker-server=harbor.toandevops.click --docker-username=shopnow --docker-password=ssfKROPOO549 -n shopnow

#Cấu hình yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: shopnow-frontend
  name: shopnow-frontend-deployment
  namespace: shopnow
spec:
  replicas: 1
  revisionHistoryLimit: 11
  selector:
    matchLabels:
      app: shopnow-frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: shopnow-frontend
      namespace: shopnow-frontend
    spec:
      containers:
        - image: harbor.toandevops.click/shopnow/shopnow-frontend:v1
          imagePullPolicy: Always
          name: shopnow-frontend
          ports:
            - containerPort: 80
              name: tcp
              protocol: TCP
      imagePullSecrets:
      - name: shopnow-registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: shopnow-frontend-service
  namespace: shopnow
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: tcp
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: shopnow-frontend
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: shopnow-frontend-ingress
  namespace: shopnow
spec:
  ingressClassName: nginx
  rules:
    - host: shopnow.toandevops.click
      http:
        paths:
          - backend:
              service:
                name: shopnow-frontend-service
                port:
                  number: 80
            path: /
            pathType: Prefix

#upstream.conf
upstream my_servers {
    server 192.168.100.105:30080;
    server 192.168.100.106:30080;
    server 192.168.100.107:30080;
}

#shopnow.conf
server {
    listen 80;
    server_name shopnow.toandevops.click;

    location / {
        proxy_pass http://my_servers;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


