# Cấu hình Kong database postgres
psql
CREATE USER kong WITH PASSWORD 'toandevops';
CREATE DATABASE kong;
GRANT ALL PRIVILEGES ON DATABASE kong TO kong;
\c kong
GRANT ALL PRIVILEGES ON SCHEMA public TO kong;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO kong;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO kong;
GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO kong;

#Thực hiện trên server k8s-master-1
#Cài đặt Kong
mkdir kong
cd kong
helm repo add kong https://charts.konghq.com
helm repo update
kubectl create ns kong
vi values.yaml

#Thêm cấu hình values.yaml
namespace: kong

ingressController:
  enabled: true

proxy:
  type: ClusterIP
  http:
    enabled: true
    servicePort: 8000
  tls:
    enabled: false

admin:
  enabled: true
  type: ClusterIP

  http:
    enabled: true
    servicePort: 8001
    containerPort: 8001
  ingress:
    enabled: false

env:
  admin_gui_url: "http://kong-manager.toandevops.click"
  admin_gui_api_url: "http://kong-admin.toandevops.click"

  database: postgres
  pg_database: kong
  pg_user: kong
  pg_password: toandevops
  pg_host: postgres.shopnow.svc.cluster.local

manager:
  enabled: true
  type: ClusterIP
  http:
    enabled: true
    servicePort: 8002
    containerPort: 8002
  tls:
    enabled: false
  ingress:
    enabled: false

#Cài đặt kong
helm install gw kong/kong -f values.yaml -n kong

#Tạo 3 ingress Kong admin, Kong manager, Kong proxy
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-manager-ingress
  namespace: kong
spec:
  ingressClassName: nginx
  rules:
    - host: kong-manager.toandevops.click
      http:
        paths:
          - backend:
              service:
                name: gw-kong-manager
                port:
                  number: 8002
            path: /
            pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-admin-ingress
  namespace: kong
spec:
  ingressClassName: nginx
  rules:
    - host: kong-admin.toandevops.click
      http:
        paths:
          - backend:
              service:
                name: gw-kong-admin
                port:
                  number: 8001
            path: /
            pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-proxy-ingress
  namespace: kong
spec:
  ingressClassName: nginx
  rules:
    - host: gw.toandevops.click
      http:
        paths:
          - backend:
              service:
                name: gw-kong-proxy
                port:
                  number: 8000
            path: /
            pathType: Prefix

