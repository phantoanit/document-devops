#Thực hiện trên server k8s-master-1
#Cài đặt Gitlab-runner
mkdir gitlab-runner
helm repo add gitlab https://charts.gitlab.io
helm install gitlab-runner gitlab/gitlab-runner --namespace gitlab-runner --create-namespace --set gitlabUrl=https://gitlab.toandevops.click --set runnerRegistrationToken=

#cau hinh de gitlab runner co quyen tren k8s
#quyen rbac
#tao tai khoan va quyen
#sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-runner-sa
  namespace: gitlab-runner
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitlab-runner-role
  namespace: gitlab-runner
rules:
  - apiGroups: [""]
    resources: ["secrets", "pods", "pods/log", "configmaps"]
    verbs: ["get", "list", "create", "delete", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["create", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-runner-role-binding
  namespace: gitlab-runner
subjects:
  - kind: ServiceAccount
    name: gitlab-runner-sa
    namespace: gitlab-runner
roleRef:
  kind: Role
  name: gitlab-runner-role
  apiGroup: rbac.authorization.k8s.io


#gitlab-runner-sa-binding.yaml (nên cấp quyền cụ thể cho từng ns với quyền xác định)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab-runner-sa-binding
subjects:
  - kind: ServiceAccount
    name: gitlab-runner-sa
    namespace: gitlab-runner
roleRef:
  kind: ClusterRole
  name: cluster-admin  # Cấp quyền admin để truy cập tất cả tài nguyên
  apiGroup: rbac.authorization.k8s.io

#Cấu hình .gitlab-ci.yml
stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE: harbor.toandevops.click/shopnow/user-service:$CI_COMMIT_SHORT_SHA

build:
  stage: build
  image: docker:20-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:20-dind
      alias: docker
      command: ["--tls=false"]
  script:
    - docker info
    - docker build -t $DOCKER_IMAGE .
    - docker login -u shopnow -p ssfKOPOO549 https://harbor.toandevops.click/
    - docker push $DOCKER_IMAGE
  tags:
    - runner-shared-1

deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - kubectl set image deployment/shopnow-user-service-deployment shopnow-user-service=$DOCKER_IMAGE -n shopnow
  tags:
    - runner-shared-1

## truong hop cai dat qua helm tuy chinh charts
gitlabUrl: https://gitlab.toandevops.click/
runnerRegistrationToken: "yGxopAUesbUtJsooyBj_"
rbac:
  create: true


serviceAccount:
  create: false
  name: gitlab-runner-sa

runners:
  config: |
    [[runners]]
      name = "runner-shared-1-arm64"
      url = "https://gitlab.toandevops.click/"
      token = "__TOKEN__"
      executor = "kubernetes"
      [runners.kubernetes]
        namespace = "gitlab-runner"
        image = "alpine:latest"
        privileged = true
        cpu_request = "100m"
        memory_request = "128Mi"
        service_account = "gitlab-runner-sa"
        helper_image = "gitlab/gitlab-runner-helper:arm64-v16.10.0"
  tags: "runner-shared-1-arm64"
  locked: false
  runUntagged: true
  privileged: true

# Override image to ARM64-compatible
image:
  registry: registry.gitlab.com
  image: gitlab-org/gitlab-runner
  tag: alpine


